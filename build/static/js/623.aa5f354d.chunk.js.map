{"version":3,"file":"static/js/623.aa5f354d.chunk.js","mappings":"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","sources":["pages/LinearGradient/LinearGradient.js"],"sourcesContent":["import React from \"react\";\n\nimport { Field, Form, Formik } from \"formik\";\nimport { Box, Container, Grid, Typography } from \"@mui/material\";\nimport { MuiColorInput } from \"mui-color-input\";\nimport ContentCopyOutlinedIcon from \"@mui/icons-material/ContentCopyOutlined\";\n\nimport Option from \"../../components/common/option/Option\";\nimport AppLayout from \"../../components/layout/AppLayout\";\nimport FormSelect from \"../../components/common/form/Select/Select\";\nimport { orentation, Size, Position } from \"../../components/jsonData\";\n\nimport \"./LinearGradient.scss\";\nimport { textCopyFunc } from \"../../components/common/Utils\";\n\n\nconst LinearGradient = () => {\n  const [color, setColor] = React.useState(\"rgb(56, 217, 168)\");\n  const [backgroundColor, setBackgroundColor] = React.useState(\"rgb(215, 7, 7)\");\n\n  function gradientType(values) {\n    const { orientation_type, linear_degree, linear_size, linear_position, start_color, end_color } =\n      values.values;\n\n    switch (orientation_type) {\n      case \"linaer\":\n        return `linear-gradient(${linear_degree}deg, ${color} ${start_color}%, ${backgroundColor} ${end_color}%)`;\n      case \"radial\":\n        return `radial-gradient(circle ${linear_size} at ${linear_position}, ${color} ${start_color}%, ${backgroundColor} ${end_color}%)`;\n      case \"elliptical\":\n        return `radial-gradient(ellipse ${linear_size} at ${linear_position}, ${color} ${start_color}%, ${backgroundColor} ${end_color}%)`;\n      case \"repeat linear\":\n        return `repeating-linear-gradient(${linear_degree}deg, ${color} ${start_color}%, ${backgroundColor} ${end_color}%)`;\n      case \"repeat radial\":\n        return `repeating-radial-gradient(circle ${linear_size} at ${linear_position}, ${color} ${start_color}%, ${backgroundColor} ${end_color}%)`;\n      case \"repeat elliptical\":\n        return `repeating-radial-gradient(ellipse ${linear_size} at ${linear_position}, ${color} ${start_color}%, ${backgroundColor} ${end_color}%)`;\n      default:\n        return `linear-gradient(${linear_degree}deg, ${color} ${start_color}%, ${backgroundColor} ${end_color}%)`;\n    }\n  }\n\n  return (\n    <AppLayout>\n      <section className=\"custom_section linearGradient_section\">\n        <Typography variant=\"h1\" className=\"title\">\n          Linear Gradient\n        </Typography>\n        <Container>\n          <Grid container className=\"grid_container\">\n            <Formik\n              initialValues={{\n                linear_degree: 0,\n                orientation_type: \"linear\",\n                linear_size: \"farthest-side\",\n                linear_position: \"top left\",\n                start_color: 20,\n                end_color: 80\n              }}\n            >\n              {(values) => (\n                <>\n                  <Grid item xs={5} className=\"left_column custom_colum\">\n                    <Form>\n                      <Box className=\"slider_wrapper\">\n                        <Box className=\"slider_title\">\n                          <Typography variant=\"h5\">Size</Typography>\n                          <Box className=\"slider_input custom_slider_input\">\n                            <Field\n                              name=\"orientation_type\"\n                              dropDownIon=\"keyboardArrow\"\n                              component={FormSelect}\n                              optionData={orentation}\n                              optionValueKey=\"id\"\n                              optionLabelKey=\"value\"\n                            />\n                          </Box>\n                        </Box>\n                      </Box>\n\n                      {values.values.orientation_type === \"linear\" && (\n                        <Option\n                          label=\"Degree\"\n                          name=\"linear_degree\"\n                          min={0}\n                          max={360}\n                          step={1}\n                          optType={\"deg\"}\n                        />\n                      )}\n\n                      {values.values.orientation_type !== \"linear\" && (\n                        <>\n                          <Box className=\"slider_wrapper\">\n                            <Box className=\"slider_title\">\n                              <Typography variant=\"h5\">Position</Typography>\n                              <Box className=\"slider_input custom_slider_input\">\n                                <Field\n                                  name=\"linear_size\"\n                                  dropDownIon=\"keyboardArrow\"\n                                  component={FormSelect}\n                                  optionData={Size}\n                                  optionValueKey=\"id\"\n                                  optionLabelKey=\"value\"\n                                />\n                              </Box>\n                            </Box>\n                          </Box>\n                          <Box className=\"slider_wrapper\">\n                            <Box className=\"slider_title\">\n                              <Typography variant=\"h5\">Orientation</Typography>\n                              <Box className=\"slider_input custom_slider_input\">\n                                <Field\n                                  name=\"linear_position\"\n                                  dropDownIon=\"keyboardArrow\"\n                                  component={FormSelect}\n                                  optionData={Position}\n                                  optionValueKey=\"id\"\n                                  optionLabelKey=\"value\"\n                                />\n                              </Box>\n                            </Box>\n                          </Box>\n                        </>\n                      )}\n\n                      <Box className=\"colorPicker_wrapper\">\n                        <Typography typography=\"h5\">Start Color</Typography>\n                        <MuiColorInput\n                          value={color}\n                          onChange={(color) => setColor(color)}\n                        />\n                      </Box>\n                      <Option\n                          label=\"Start color Percentage\"\n                          name=\"start_color\"\n                          min={0}\n                          max={100}\n                          step={1}\n                          optType={\"per\"}\n                        />\n                      <Box className=\"colorPicker_wrapper\">\n                        <Typography typography=\"h5\">End Color</Typography>\n                        <MuiColorInput\n                          value={backgroundColor}\n                          onChange={(color) => setBackgroundColor(color)}\n                        />\n                      </Box>\n                      <Option\n                          label=\"End color Percentage\"\n                          name=\"end_color\"\n                          min={0}\n                          max={100}\n                          step={1}\n                          optType={\"per\"}\n                        />\n                    </Form>\n                  </Grid>\n                  <Grid item xs={7} pl={5} className=\"right_column custom_colum\">\n                    <Box\n                      className=\"display_box\"\n                      style={{\n                        background: gradientType(values),\n                      }}\n                    ></Box>\n                    <Box className=\"result_content\" id=\"result_text\">\n                      <Typography variant=\"h6\">\n                        background: {gradientType(values)};\n                      </Typography>\n                      <ContentCopyOutlinedIcon onClick={ () => textCopyFunc(\"result_text\") } className=\"textCopy_icon icon_large\" />\n                    </Box>\n                  </Grid>\n                </>\n              )}\n            </Formik>\n          </Grid>\n        </Container>\n      </section>\n    </AppLayout>\n  );\n};\n\nexport default LinearGradient;\n"],"names":["_React$useState","React","_React$useState2","_slicedToArray","color","setColor","_React$useState3","_React$useState4","backgroundColor","setBackgroundColor","gradientType","values","_values$values","orientation_type","linear_degree","linear_size","linear_position","start_color","end_color","concat","_jsx","AppLayout","children","_jsxs","className","Typography","variant","Container","Grid","container","Formik","initialValues","_Fragment","item","xs","Form","Box","Field","name","dropDownIon","component","FormSelect","optionData","orentation","optionValueKey","optionLabelKey","Option","label","min","max","step","optType","Size","Position","typography","MuiColorInput","value","onChange","pl","style","background","id","ContentCopyOutlinedIcon","onClick","textCopyFunc"],"sourceRoot":""}